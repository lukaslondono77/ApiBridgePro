version: '3.8'

services:
  apibridge:
    build: .
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - OTEL_ENABLED=${OTEL_ENABLED:-false}
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - PII_ENCRYPTION_KEY=${PII_ENCRYPTION_KEY:-}
      - OPENWEATHER_KEY=${OPENWEATHER_KEY}
      - WEATHERAPI_KEY=${WEATHERAPI_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
    depends_on:
      - redis
    volumes:
      - ./connectors.yaml:/app/connectors.yaml
    networks:
      - apibridge

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - apibridge
    volumes:
      - redis-data:/data

  # Optional: Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # OTLP gRPC receiver
      - "4318:4318"    # OTLP HTTP receiver
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - apibridge
    profiles:
      - observability

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - apibridge
    profiles:
      - observability

  # Optional: Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - apibridge
    profiles:
      - observability

networks:
  apibridge:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data:


